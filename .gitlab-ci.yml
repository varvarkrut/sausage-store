stages:
  - build
  - notify
  - test
  - release

include:
  - template: Security/SAST.gitlab-ci.yml

build-backend-code-job:
  stage: build
  only:
    changes:
    - backend/*
  script:
    - cd backend
    - mvn package -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository
  artifacts:
    paths:
    - backend/target/sausage-store-0.0.1-SNAPSHOT.jar
    - ${CI_PROJECT_DIR}/.m2/ # сохранение зависимостей для SAST

build-frontend-code-job:
  stage: build
  only:
    changes:
    - frontend/*
  script:
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend
      - ${CI_PROJECT_DIR}/.m2/

spotbugs-sast:
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 11
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository # не забудьте при сборке также указывать эту папку через аргумент -Dmaven.repo.local

sonarqube-backend-sast:
  stage: test
  only:
    changes:
      - backend/*
  image: maven:3.8-openjdk-16 # тот самый docker-образ, о котором мы все узнаем в будущем
  script:
    - cd backend
    - >
      mvn verify sonar:sonar -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_KEY}
      -Dsonar.host.url=${SONAR_URL}
      -Dsonar.login=${SONAR_LOGIN}
      -Dsonar.projectName=09_IVANSHKURKO_BACKEND
  needs:
    - build-backend-code-job

sonarqube-frontend-sast:
  stage: test
  only:
    changes:
      - frontend/*
  image: node:16.0.0-buster # тот самый docker-образ, о котором мы все узнаем в будущем
  script:
    - cd frontend
    - npm install -g sonarqube-scanner
    - >
      sonar-scanner
      -Dsonar.projectKey=${SONAR_FRONT_KEY}
      -Dsonar.sources=.
      -Dsonar.host.url=${SONAR_URL}
      -Dsonar.login=${SONAR_FRONT_LOGIN}
      -Dsonar.projectName=09_IVANSHKURKO_FRONTEND
  needs:
    - build-frontend-code-job

slack-notification-backend:
  stage: notify
  only:
    changes:
    - backend/*
  script: |
    curl -X POST -H "Content-type: application/json"  --data '{"text": " Шкурко Иван собрал <'"$CI_PROJECT_URL"'/-/jobs/artifacts/'"$CI_COMMIT_REF_NAME"'/download?job=build-backend-code-job|backend>  "}' https://hooks.slack.com/services/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
  needs:
    - build-backend-code-job

slack-notification-frontend:
  stage: notify
  only:
    changes:
    - frontend/*
  script: |
    curl -X POST -H "Content-type: application/json"  --data '{"text": " Вышла новая версия backend сосичной <'"$VERSION"> <'"$CI_PROJECT_URL"'/-/jobs/artifacts/'"$CI_COMMIT_REF_NAME"'/download?job=build-frontend-code-job|frontend> "}' https://hooks.slack.com/services/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
  needs:
    - build-frontend-code-job

upload-backend-release:
  stage: release
  only:
    changes:
      - backend/*
  needs:
    - build-backend-code-job
  script:
    - cd backend
    - mvn -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository -s settings.xml -Dversion.application=${VERSION} -DskipTests deploy

cache:
  paths:
    - ${CI_PROJECT_DIR}/.m2/repository # для хранения зависимостей бэкенда
    - frontend/dist/frontend # для хранения фронта